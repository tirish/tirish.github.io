{"version":3,"sources":["components/Home.js","helpers/storage.js","components/EvgaQueue.js","App.js","reportWebVitals.js","index.js"],"names":["Home","storage","window","localStorage","get","key","value","JSON","parse","formatDate","dateStr","isPt","date","Date","toLocaleString","timeZone","EvgaQueue","props","refreshData","self","fetch","then","res","json","data","map","d","sku","name","productLink","timestamp","timestampNA","updated","updatedAt","hide","setState","error","lastRefresh","catch","finally","loading","componentDidMount","toggleShowHidden","prev","showHidden","toggleSku","cur","stringify","state","render","renderData","className","href","target","rel","onClick","class","Component","App","to","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93d5e31c.chunk.js","sourcesContent":["\r\nexport default function Home(){\r\n    return (\r\n        <div>\r\n            Home\r\n        </div>\r\n    );\r\n}","const storage = window.localStorage || {};\r\n\r\nexport function set(key, value){\r\n    storage[key] = JSON.stringify(value);\r\n}\r\n\r\nexport function get(key){\r\n    const value = storage[key];\r\n    try {\r\n        return JSON.parse(value);\r\n    } catch {\r\n        return value;\r\n    }\r\n}\r\n","import { Component } from 'react';\r\nimport * as storage from '../helpers/storage';\r\nimport './EvgaQueue.css';\r\n\r\nconst apiUrl = 'https://e35-queue-tracker-api.herokuapp.com/product/?sortBy=sku:desc';\r\n\r\nconst pad = (num) => num < 10 ? '0' + num : num.toString();\r\n\r\nconst formatDate = (dateStr, isPt) => {\r\n\r\n    if(!dateStr) return '';\r\n\r\n    const date = new Date(dateStr);\r\n    // isPt -> server kicks back date as UTC but the value is actually a PT date\r\n    return isPt ? date.toLocaleString('en-US', { timeZone: 'UTC'}): date.toLocaleString('en-US');\r\n}\r\n\r\nexport default class EvgaQueue extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            loading: true,\r\n            showHidden: false\r\n        };\r\n    }\r\n\r\n    refreshData = () => {\r\n        const self = this;\r\n        fetch(apiUrl)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                data = data.map(d => ({\r\n                    sku: d.sku,\r\n                    name: d.name,\r\n                    productLink: 'https://www.evga.com/products/product.aspx?pn=' + d.sku,\r\n                    timestamp: formatDate(d.timestampNA, true),\r\n                    updated: formatDate(d.updatedAt),\r\n                    hide: !!(storage.get(d.sku) || {}).hide || !d.timestampNA\r\n                }));\r\n                self.setState({ data: data, error: false, lastRefresh: formatDate(new Date()) });\r\n            })\r\n            .catch(() => self.setState({ error: true }))\r\n            .finally(() => self.setState({ loading: false }));\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.refreshData();\r\n    };\r\n\r\n\r\n    toggleShowHidden = () => {\r\n        this.setState(prev => ({ showHidden: !prev.showHidden }));\r\n    }\r\n\r\n    toggleSku = (sku) => {\r\n        const cur = (storage.get(sku) || {});\r\n        cur.hide = !cur.hide;\r\n        storage.set(sku, cur);\r\n        const data = this.state.data.map(d => {\r\n            if(d.sku === sku){\r\n                return {\r\n                    ...d,\r\n                    hide: cur.hide\r\n                };\r\n            }\r\n            return d;\r\n        });\r\n        this.setState({ data: data });\r\n    }\r\n    \r\n    render = () => {\r\n\r\n        if(this.state.loading){\r\n            return (<span>Loading...</span>);\r\n        }\r\n        if(this.state.error){\r\n            return (<span>Encountered error</span>);\r\n        }\r\n\r\n        const renderData = this.state.data;\r\n\r\n        return (\r\n            <div className=\"EvgaQueue-container\">\r\n                <table className=\"EvgaQueue-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>\r\n                                Part Number\r\n                            </th>\r\n                            <th>\r\n                                Name\r\n                            </th>\r\n                            <th>\r\n                                Queue Timestamp (PT)\r\n                            </th>\r\n                            <th>\r\n                                Last Update (Local)\r\n                            </th>\r\n                            <th>\r\n                                Toggle\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        renderData.map(d => (\r\n                            (!d.hide || this.state.showHidden) && (<tr key={d.sku}>\r\n                                <td>\r\n                                    <a href={d.productLink} target=\"_blank\" rel=\"noreferrer\">{d.sku}</a>\r\n                                </td>\r\n                                <td>\r\n                                    {d.name}\r\n                                </td>\r\n                                <td>\r\n                                    {d.timestamp}\r\n                                </td>\r\n                                <td>\r\n                                    {d.updated}\r\n                                </td>\r\n                                <td>\r\n                                    <a href=\"#\" onClick={() => this.toggleSku(d.sku)}>{d.hide ? 'Show' : 'Hide'}</a>\r\n                                </td>\r\n                            </tr>)\r\n                        ))\r\n                    }\r\n                    </tbody>\r\n                </table>\r\n                <div className=\"EvgaQueue-showhidden-toggle-container\">\r\n                    <a href=\"#\" class=\"EvgaQueue-showhidden-toggle\" onClick={() => this.toggleShowHidden()}>{this.state.showHidden ? 'Hide hidden items' : 'Show hidden items'}</a>\r\n                </div>\r\n                <div className=\"EvgaQueue-footer\">\r\n                    <div className=\"EvgaQueue-footer-datasource\">\r\n                        <small>Data source: <a href=\"https://www.element35gaming.com/\" target=\"_blank\" rel=\"noreferrer\">https://www.element35gaming.com/</a></small>\r\n                    </div>\r\n                    <div className=\"EvgaQueue-footer-timer\">\r\n                        <small>Last refresh: {this.state.lastRefresh}</small>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n}\r\n","import './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Home from './components/Home';\nimport EvgaQueue from './components/EvgaQueue';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <nav>\n            <ul>\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li>\n                <Link to=\"/evgaQueue\">EVGA Queue</Link>\n              </li>\n            </ul>\n          </nav>\n        </header>\n        <section className=\"App-content\">\n          <Switch>\n            <Route path=\"/evgaQueue\"> \n              <EvgaQueue />\n            </Route>            \n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>        \n        </section>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}