{"version":3,"sources":["components/Home.js","helpers/storage.js","components/ButtonLink.js","components/QueueTextbox.js","components/EvgaQueue.js","App.js","reportWebVitals.js","index.js"],"names":["Home","storage","window","localStorage","set","key","value","JSON","stringify","ButtonLink","onClick","className","children","type","QueueTextbox","props","onChange","e","currentTarget","setState","rawValue","onSave","state","trim","isEditMode","setEditMode","render","placeholder","display","Component","getStorage","sku","obj","hide","myQueue","val","parse","Object","assign","formatDate","dateStr","isPt","date","Date","toLocaleString","timeZone","categories","getCategory","item","i","length","name","indexOf","expectedFormatReg","setMyQueueDisplay","raw","m","match","EvgaQueue","refreshData","self","fetch","then","res","json","data","map","d","productLink","timestamp","timestampNA","updated","updatedAt","toLocaleDateString","category","error","lastRefresh","catch","finally","loading","componentDidMount","toggleShowHidden","prev","showHidden","toggleSku","cur","updateMyQueue","renderCategoryRows","renderData","filter","show","some","colSpan","href","target","rel","c","App","to","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48cfcd0f.chunk.js","sourcesContent":["\r\nexport default function Home(){\r\n    return (\r\n        <div>\r\n            Home\r\n        </div>\r\n    );\r\n}","const storage = window.localStorage || {};\r\n\r\nexport function set(key, value){\r\n    storage[key] = JSON.stringify(value);\r\n}\r\n\r\nexport function get(key){\r\n    const value = storage[key];\r\n    try {\r\n        return JSON.parse(value);\r\n    } catch {\r\n        return value;\r\n    }\r\n}\r\n","import './ButtonLink.css';\r\n\r\nexport default function ButtonLink({onClick, className, children}) {\r\n    return (\r\n        <button type=\"button\" className={`ButtonLink-btn ${className}`} onClick={onClick}>{children}</button>\r\n    );\r\n}","import { Component } from 'react';\r\nimport ButtonLink from './ButtonLink';\r\n\r\nexport default class QueueTextbox extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            rawValue: '',\r\n            isEditMode: false\r\n        };\r\n    }\r\n\r\n    onChange = (e) => {\r\n        const value = (e?.currentTarget?.value || '');\r\n        this.setState({ rawValue: value });\r\n    };\r\n\r\n    onSave = () => {\r\n        const value = (this.state.rawValue || '').trim();\r\n        this.props.onSave?.(value);\r\n        this.setState({ isEditMode: false });\r\n    };\r\n\r\n    setEditMode = (isEditMode) => {\r\n\r\n        if(isEditMode){\r\n            this.setState({ rawValue: this.props.rawValue || '', isEditMode: true });\r\n        } else {\r\n            this.setState({ isEditMode: false })\r\n        }\r\n\r\n    };\r\n\r\n    render = () => {\r\n\r\n        if(this.state.isEditMode){\r\n            return (\r\n                <div className=\"QueueTextbox-editmode\">\r\n                    <input className=\"QueueTextbox-textbox\" type=\"text\" value={this.state.rawValue} onChange={(e) => this.onChange(e)} placeholder={this.props.placeholder} />\r\n                    <span className=\"QueueTextbox-buttonbar\">\r\n                        <ButtonLink onClick={() => this.onSave()}>Save</ButtonLink> | <ButtonLink onClick={() => this.setEditMode(false)}>Cancel</ButtonLink>\r\n                    </span>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className=\"QueueTextbox-displaymode\">\r\n                <span className=\"QueueTextbox-display\">{this.props.display || ''}</span>\r\n                <ButtonLink className=\"QueueTextbox-editlink\" onClick={() => this.setEditMode(true)}>{this.props.display ? 'Edit' : 'Set'}</ButtonLink>\r\n            </div>\r\n        );\r\n    };\r\n\r\n}","import { Component } from 'react';\r\nimport * as storage from '../helpers/storage';\r\nimport './EvgaQueue.css';\r\nimport ButtonLink from './ButtonLink';\r\nimport QueueTextbox from './QueueTextbox';\r\n\r\nconst apiUrl = 'https://e35-queue-tracker-api.herokuapp.com/product/?sortBy=sku:desc';\r\n\r\nconst getStorage = (sku) => {\r\n    let obj = { hide: false, myQueue: {} };\r\n    let val = storage.get(sku) || {};\r\n    Object.assign(obj, val);\r\n    return obj;\r\n};\r\n\r\nconst formatDate = (dateStr, isPt) => {\r\n\r\n    if(!dateStr) return '';\r\n\r\n    const date = new Date(dateStr);\r\n    // isPt -> server kicks back date as UTC but the value is actually a PT date\r\n    return isPt ? date.toLocaleString('en-US', { timeZone: 'UTC'}): date.toLocaleString('en-US');\r\n};\r\n\r\nconst formatDateOnly = (dateStr) => {\r\n    if(!dateStr) return '';\r\n    const date = new Date(dateStr);\r\n    return date.toLocaleDateString('en-US');\r\n};\r\n\r\n//substrings -- order matters since this is the order the substring matching is run\r\nconst categories = [\r\n    '3090',\r\n    '3080 Ti',\r\n    '3080',\r\n    '3070 Ti',\r\n    '3070',    \r\n    '3060 Ti',\r\n    '3060',\r\n    'Misc'\r\n];\r\n    \r\nconst getCategory = (item) => {\r\n    for(let i = 0; i < categories.length; i++){\r\n        if(item.name.indexOf(categories[i]) >= 0){\r\n            return categories[i];\r\n        }\r\n    }\r\n    return 'Misc';\r\n};\r\n\r\nconst expectedFormatReg = /^(\\d{1,2}\\/\\d{1,2}\\/\\d{4}\\s+\\d{1,2}:\\d{2}:\\d{2}\\s+[AP]M)(?:\\s+PT)$/;\r\nconst setMyQueueDisplay = (myQueue) => {\r\n    myQueue = myQueue || {};\r\n    const raw = myQueue.raw;\r\n    if(!raw){\r\n        myQueue.display = '';\r\n    } else {\r\n        const m = myQueue.raw.match(expectedFormatReg);\r\n        if(!m || !m.length){\r\n            myQueue.raw = '';\r\n            myQueue.display = '';\r\n        } else {\r\n            const dateStr = m[1] + ' GMT+0000';\r\n            const date = new Date(dateStr);\r\n            myQueue.display = date.toLocaleString('en-US', { timeZone: 'UTC' });\r\n        }        \r\n    }\r\n\r\n    return myQueue;\r\n};\r\n\r\nexport default class EvgaQueue extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            loading: true,\r\n            showHidden: false\r\n        };\r\n    }\r\n\r\n    refreshData = () => {\r\n        const self = this;\r\n        fetch(apiUrl)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                data = data.map(d => ({\r\n                    sku: d.sku,\r\n                    name: d.name,\r\n                    productLink: 'https://www.evga.com/products/product.aspx?pn=' + d.sku,\r\n                    timestamp: formatDate(d.timestampNA, true),\r\n                    updated: formatDateOnly(d.updatedAt),\r\n                    hide: !!getStorage(d.sku).hide || !d.timestampNA,\r\n                    myQueue: setMyQueueDisplay(getStorage(d.sku).myQueue),\r\n                    category: getCategory(d)\r\n                }));\r\n                self.setState({ data: data, error: false, lastRefresh: formatDate(new Date()) });\r\n            })\r\n            .catch(() => self.setState({ error: true }))\r\n            .finally(() => self.setState({ loading: false }));\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.refreshData();\r\n    };\r\n\r\n\r\n    toggleShowHidden = () => {\r\n        this.setState(prev => ({ showHidden: !prev.showHidden }));\r\n    }\r\n\r\n    toggleSku = (sku) => {\r\n        const cur = getStorage(sku);\r\n        cur.hide = !cur.hide;\r\n        storage.set(sku, cur);\r\n        const data = this.state.data.map(d => {\r\n            if(d.sku === sku){\r\n                return {\r\n                    ...d,\r\n                    hide: cur.hide\r\n                };\r\n            }\r\n            return d;\r\n        });\r\n        this.setState({ data: data });\r\n    };\r\n\r\n    updateMyQueue = (sku, rawValue) => {\r\n        const cur = getStorage(sku);\r\n        cur.myQueue = cur.myQueue || {};\r\n        cur.myQueue.raw = rawValue;\r\n        storage.set(sku, cur);\r\n\r\n        const data = this.state.data.map(d => {\r\n            if(d.sku === sku){\r\n                return {\r\n                    ...d,\r\n                    myQueue: setMyQueueDisplay({ ...d.myQueue, raw:rawValue })\r\n                };\r\n            }\r\n            return d;\r\n        });\r\n        this.setState({ data: data });\r\n    };\r\n    \r\n    renderCategoryRows = (category) => {\r\n\r\n        const renderData = this.state.data.filter(d => d.category === category).map(d => ({\r\n            ...d,\r\n            show: !d.hide || this.state.showHidden\r\n        }));\r\n\r\n        if(!renderData.some(d => d.show)){\r\n            return (<></>);\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <tr className=\"EvgaQueue-table-category-row\">\r\n                    <th colSpan={6}>\r\n                        {category}\r\n                    </th>\r\n                </tr>\r\n                {\r\n                    renderData.map(d => (\r\n                        d.show && (<tr key={d.sku}>\r\n                            <td>\r\n                                <a href={d.productLink} target=\"_blank\" rel=\"noreferrer\">{d.sku}</a>\r\n                            </td>\r\n                            <td>\r\n                                {d.name}\r\n                            </td>\r\n                            <td>\r\n                                {d.timestamp}\r\n                            </td>\r\n                            <td>\r\n                                <QueueTextbox rawValue={d.myQueue.raw} display={d.myQueue.display} onSave={(rawValue) => this.updateMyQueue(d.sku, rawValue)} placeholder='M/d/yyyy h:mm:ss aa PT' />\r\n                            </td>\r\n                            <td>\r\n                                {d.updated}\r\n                            </td>\r\n                            <td>\r\n                                <ButtonLink onClick={() => this.toggleSku(d.sku)}>{d.hide ? 'Show' : 'Hide'}</ButtonLink>\r\n                            </td>\r\n                        </tr>)\r\n                    ))\r\n                }\r\n            </>              \r\n        );\r\n    }\r\n\r\n    render = () => {\r\n\r\n        if(this.state.loading){\r\n            return (<span>Loading...</span>);\r\n        }\r\n        if(this.state.error){\r\n            return (<span>Encountered error</span>);\r\n        }\r\n\r\n        return (\r\n            <div className=\"EvgaQueue-container\">\r\n                <table className=\"EvgaQueue-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>\r\n                                Part Number\r\n                            </th>\r\n                            <th>\r\n                                Name\r\n                            </th>\r\n                            <th>\r\n                                Queue Timestamp (PT)\r\n                            </th>\r\n                            <th>\r\n                                My Queue (PT)\r\n                            </th>\r\n                            <th>\r\n                                Last Update\r\n                            </th>\r\n                            <th>\r\n                                Toggle\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { categories.map(c => this.renderCategoryRows(c))}                    \r\n                    </tbody>\r\n                </table>\r\n                <div className=\"EvgaQueue-showhidden-toggle-container\">\r\n                    <ButtonLink className=\"EvgaQueue-showhidden-toggle\" onClick={() => this.toggleShowHidden()}>{this.state.showHidden ? 'Hide hidden items' : 'Show hidden items'}</ButtonLink>\r\n                </div>\r\n                <div className=\"EvgaQueue-footer\">\r\n                    <div className=\"EvgaQueue-footer-datasource\">\r\n                        <small>Data source: <a href=\"https://www.element35gaming.com/\" target=\"_blank\" rel=\"noreferrer\">https://www.element35gaming.com/</a></small>\r\n                    </div>\r\n                    <div className=\"EvgaQueue-footer-timer\">\r\n                        <small>Last refresh: {this.state.lastRefresh}</small>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n}\r\n","import './App.css';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Home from './components/Home';\nimport EvgaQueue from './components/EvgaQueue';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <nav>\n            <ul>\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li>\n                <Link to=\"/evgaQueue\">EVGA Queue</Link>\n              </li>\n            </ul>\n          </nav>\n        </header>\n        <section className=\"App-content\">\n          <Switch>\n            <Route path=\"/evgaQueue\"> \n              <EvgaQueue />\n            </Route>            \n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>        \n        </section>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}