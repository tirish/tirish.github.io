{"version":3,"sources":["components/Home.js","helpers/storage.js","components/ButtonLink.js","components/EvgaQueue.js","App.js","reportWebVitals.js","index.js"],"names":["Home","storage","window","localStorage","get","key","value","JSON","parse","ButtonLink","onClick","className","children","type","formatDate","dateStr","isPt","date","Date","toLocaleString","timeZone","categories","getCategory","item","i","length","name","indexOf","EvgaQueue","props","refreshData","self","fetch","then","res","json","data","map","d","sku","productLink","timestamp","timestampNA","updated","updatedAt","toLocaleDateString","hide","category","setState","error","lastRefresh","catch","finally","loading","componentDidMount","toggleShowHidden","prev","showHidden","toggleSku","cur","stringify","state","renderCategoryRows","renderData","filter","show","some","colSpan","href","target","rel","render","c","Component","App","to","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39a52eec.chunk.js","sourcesContent":["\r\nexport default function Home(){\r\n    return (\r\n        <div>\r\n            Home\r\n        </div>\r\n    );\r\n}","const storage = window.localStorage || {};\r\n\r\nexport function set(key, value){\r\n    storage[key] = JSON.stringify(value);\r\n}\r\n\r\nexport function get(key){\r\n    const value = storage[key];\r\n    try {\r\n        return JSON.parse(value);\r\n    } catch {\r\n        return value;\r\n    }\r\n}\r\n","import './ButtonLink.css';\r\n\r\nexport default function ButtonLink({onClick, className, children}) {\r\n    return (\r\n        <button type=\"button\" className={`ButtonLink-btn ${className}`} onClick={onClick}>{children}</button>\r\n    );\r\n}","import { Component } from 'react';\r\nimport * as storage from '../helpers/storage';\r\nimport './EvgaQueue.css';\r\nimport ButtonLink from './ButtonLink';\r\n\r\nconst apiUrl = 'https://e35-queue-tracker-api.herokuapp.com/product/?sortBy=sku:desc';\r\n\r\nconst formatDate = (dateStr, isPt) => {\r\n\r\n    if(!dateStr) return '';\r\n\r\n    const date = new Date(dateStr);\r\n    // isPt -> server kicks back date as UTC but the value is actually a PT date\r\n    return isPt ? date.toLocaleString('en-US', { timeZone: 'UTC'}): date.toLocaleString('en-US');\r\n};\r\n\r\nconst formatDateOnly = (dateStr) => {\r\n    if(!dateStr) return '';\r\n    const date = new Date(dateStr);\r\n    return date.toLocaleDateString('en-US');\r\n};\r\n\r\n//substrings -- order matters since this is the order the substring matching is run\r\nconst categories = [\r\n    '3090',\r\n    '3080 Ti',\r\n    '3080',\r\n    '3070 Ti',\r\n    '3070',    \r\n    '3060 Ti',\r\n    '3060',\r\n    'Misc'\r\n];\r\n    \r\nconst getCategory = (item) => {\r\n    for(let i = 0; i < categories.length; i++){\r\n        if(item.name.indexOf(categories[i]) >= 0){\r\n            return categories[i];\r\n        }\r\n    }\r\n    return 'Misc';\r\n}\r\n\r\nexport default class EvgaQueue extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            loading: true,\r\n            showHidden: false\r\n        };\r\n    }\r\n\r\n    refreshData = () => {\r\n        const self = this;\r\n        fetch(apiUrl)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                data = data.map(d => ({\r\n                    sku: d.sku,\r\n                    name: d.name,\r\n                    productLink: 'https://www.evga.com/products/product.aspx?pn=' + d.sku,\r\n                    timestamp: formatDate(d.timestampNA, true),\r\n                    updated: formatDateOnly(d.updatedAt),\r\n                    hide: !!(storage.get(d.sku) || {}).hide || !d.timestampNA,\r\n                    category: getCategory(d)\r\n                }));\r\n                self.setState({ data: data, error: false, lastRefresh: formatDate(new Date()) });\r\n            })\r\n            .catch(() => self.setState({ error: true }))\r\n            .finally(() => self.setState({ loading: false }));\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.refreshData();\r\n    };\r\n\r\n\r\n    toggleShowHidden = () => {\r\n        this.setState(prev => ({ showHidden: !prev.showHidden }));\r\n    }\r\n\r\n    toggleSku = (sku) => {\r\n        const cur = (storage.get(sku) || {});\r\n        cur.hide = !cur.hide;\r\n        storage.set(sku, cur);\r\n        const data = this.state.data.map(d => {\r\n            if(d.sku === sku){\r\n                return {\r\n                    ...d,\r\n                    hide: cur.hide\r\n                };\r\n            }\r\n            return d;\r\n        });\r\n        this.setState({ data: data });\r\n    }\r\n    \r\n    renderCategoryRows = (category) => {\r\n\r\n        const renderData = this.state.data.filter(d => d.category === category).map(d => ({\r\n            ...d,\r\n            show: !d.hide || this.state.showHidden\r\n        }));\r\n\r\n        if(!renderData.some(d => d.show)){\r\n            return (<></>);\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <tr className=\"EvgaQueue-table-category-row\">\r\n                    <th colSpan={5}>\r\n                        {category}\r\n                    </th>\r\n                </tr>\r\n                {\r\n                    renderData.map(d => (\r\n                        d.show && (<tr key={d.sku}>\r\n                            <td>\r\n                                <a href={d.productLink} target=\"_blank\" rel=\"noreferrer\">{d.sku}</a>\r\n                            </td>\r\n                            <td>\r\n                                {d.name}\r\n                            </td>\r\n                            <td>\r\n                                {d.timestamp}\r\n                            </td>\r\n                            <td>\r\n                                {d.updated}\r\n                            </td>\r\n                            <td>\r\n                                <ButtonLink onClick={() => this.toggleSku(d.sku)}>{d.hide ? 'Show' : 'Hide'}</ButtonLink>\r\n                            </td>\r\n                        </tr>)\r\n                    ))\r\n                }\r\n            </>              \r\n        );\r\n    }\r\n\r\n    render = () => {\r\n\r\n        if(this.state.loading){\r\n            return (<span>Loading...</span>);\r\n        }\r\n        if(this.state.error){\r\n            return (<span>Encountered error</span>);\r\n        }\r\n\r\n        return (\r\n            <div className=\"EvgaQueue-container\">\r\n                <table className=\"EvgaQueue-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>\r\n                                Part Number\r\n                            </th>\r\n                            <th>\r\n                                Name\r\n                            </th>\r\n                            <th>\r\n                                Queue Timestamp (PT)\r\n                            </th>\r\n                            <th>\r\n                                Last Update\r\n                            </th>\r\n                            <th>\r\n                                Toggle\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { categories.map(c => this.renderCategoryRows(c))}                    \r\n                    </tbody>\r\n                </table>\r\n                <div className=\"EvgaQueue-showhidden-toggle-container\">\r\n                    <ButtonLink className=\"EvgaQueue-showhidden-toggle\" onClick={() => this.toggleShowHidden()}>{this.state.showHidden ? 'Hide hidden items' : 'Show hidden items'}</ButtonLink>\r\n                </div>\r\n                <div className=\"EvgaQueue-footer\">\r\n                    <div className=\"EvgaQueue-footer-datasource\">\r\n                        <small>Data source: <a href=\"https://www.element35gaming.com/\" target=\"_blank\" rel=\"noreferrer\">https://www.element35gaming.com/</a></small>\r\n                    </div>\r\n                    <div className=\"EvgaQueue-footer-timer\">\r\n                        <small>Last refresh: {this.state.lastRefresh}</small>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n}\r\n","import './App.css';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Home from './components/Home';\nimport EvgaQueue from './components/EvgaQueue';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <nav>\n            <ul>\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li>\n                <Link to=\"/evgaQueue\">EVGA Queue</Link>\n              </li>\n            </ul>\n          </nav>\n        </header>\n        <section className=\"App-content\">\n          <Switch>\n            <Route path=\"/evgaQueue\"> \n              <EvgaQueue />\n            </Route>            \n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>        \n        </section>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}